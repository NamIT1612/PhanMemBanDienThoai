<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnXuatBill.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQUAAABNCAYAAACv6nEkAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAAAMySURBVHhe7dpBa1RnGIbh/qLu3LjrypXdKBSKC+0iFBRS
        hIiUIl1IUUSSLCKIlgit2qCSkEKDBMtUElpSrA2hZBpIaqsTSKI4SBZBF2/5zozTvCR1n5zrggfCTCa7
        c5PznXmv3W6HmdnbiYKZpYmCmaWJgpmliYKZpYmCmaW9Mwprzzfi3qPpOD1+OY7fPBeHrp6M9y99ZGZ7
        bOXaLdfwqbsX4vbcVDxbX931mi/73yjcX5ip/tDA5FBMLc7Gr//8Ea32egB7T7l2yzX8YGkuvvhhpLq2
        Sxx2u/Z3RKEU5OzkcHx656vY2HzZ/ZPAfvJqa7OKQ9/Y+Vhe/Ts1IEWhBOHI6EBMLDS6HwX2s5mVx/Hx
        N59H8+ny7lEo/yEIAtRLua0o5w07olDOEMotA1A/Qw9vxZWfxv6LQnnKUA4enCFAPW29eR1Hb5yJ+SfN
        ThTKKWQ5dADq6+tfJuLi9GgnCuXZZXlUAdRXc+2v6kFDFYXD1/pj5UWr+xZQR+UW4sDgsU4UDg6fqJ5b
        AvVWvv1YRaH8ACAKQCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIK
        QCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIKQCIK
        QCIKQCIKQCIKQCIKQCIKQCIKQNKLwoHBY7H15nX3ZaCuelE4dPVktNrr3ZeBuupFoW/sfMysPO6+DNTR
        yotWHL7W34nCSOO7GHp4q/sWUEcTC404OznciULz6XJ8eP0z5wpQY/3jl+L73xudKJQN/vhtXJm9030b
        qJOpxdk4PX65akEvCmvPN+L4zXMx31rq/hpQBxubL6s7hWfrqzkKZfNPmnH0xpnqwAHY/0oQPrn9ZTQW
        53odSFEom/3ztzgyOhDXfx7vfgzYjx4szVX/IWwPQtmOKJSVW4mL06NVQcqJZKkJsPe92tqszg8GJofi
        1N0LvVuG7ds1Cm9XClIeUXww0ld9qcHM9vYODp+oDhTvPZre9Zove2cUzKx+EwUzSxMFM0sTBTNLEwUz
        27Z2/Au9IRM+aEaf1QAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="ckbChonALL.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAAAE1SURBVEhL7ZehcsJAEIYjkUhE4JDISGRlJY+AjEQicZWX
        MJ2prOwjVFbyCMjKSiRut7thySXcdjo02ZmK/DPfIPLv/tlcMrMk/1Juj4upxzWxu5sCclfCUlr9LveK
        o1kJT1R4nhWIvVDCm3vGiUTEch4zCjyGgkbxvdzUUt9T6nElUUE8KV381Io6I/34KdJwc4m8iB7HS1Rg
        ArxLZD1tf2f6EzJ5PTWfbWQypD7rqYeNZrCCPzcJxp1msGIIVk0WDMGqyYIhWDVZMASrJgtCcIFbzWBF
        HZyW8KgZeiesQHkVTIvAuHnBjLCBZFUwi3ahj8hoAC+UEnlRtbxf9y6TyQH4l49VIoP42bfMXW+A61s9
        wEtULP7bQTdwaDXoCPX7UifVJDeQ86v/Z+gzpRfpQVo2lCTfkCMM8GVx6eIAAAAASUVORK5CYII=
</value>
  </data>
</root>